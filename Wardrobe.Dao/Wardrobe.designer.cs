#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18034
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wardrobe.Dao
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Wardrobe")]
	public partial class WardrobeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCodigo(Codigo instance);
    partial void UpdateCodigo(Codigo instance);
    partial void DeleteCodigo(Codigo instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertComuna(Comuna instance);
    partial void UpdateComuna(Comuna instance);
    partial void DeleteComuna(Comuna instance);
    partial void InsertEstado(Estado instance);
    partial void UpdateEstado(Estado instance);
    partial void DeleteEstado(Estado instance);
    partial void InsertEstado_Mensaje(Estado_Mensaje instance);
    partial void UpdateEstado_Mensaje(Estado_Mensaje instance);
    partial void DeleteEstado_Mensaje(Estado_Mensaje instance);
    partial void InsertEstado_Noticia(Estado_Noticia instance);
    partial void UpdateEstado_Noticia(Estado_Noticia instance);
    partial void DeleteEstado_Noticia(Estado_Noticia instance);
    partial void InsertESTADO_PRENDA(ESTADO_PRENDA instance);
    partial void UpdateESTADO_PRENDA(ESTADO_PRENDA instance);
    partial void DeleteESTADO_PRENDA(ESTADO_PRENDA instance);
    partial void InsertEstado_Tienda(Estado_Tienda instance);
    partial void UpdateEstado_Tienda(Estado_Tienda instance);
    partial void DeleteEstado_Tienda(Estado_Tienda instance);
    partial void InsertEstado_Usuario(Estado_Usuario instance);
    partial void UpdateEstado_Usuario(Estado_Usuario instance);
    partial void DeleteEstado_Usuario(Estado_Usuario instance);
    partial void InsertImagen(Imagen instance);
    partial void UpdateImagen(Imagen instance);
    partial void DeleteImagen(Imagen instance);
    partial void InsertImagen_Producto(Imagen_Producto instance);
    partial void UpdateImagen_Producto(Imagen_Producto instance);
    partial void DeleteImagen_Producto(Imagen_Producto instance);
    partial void InsertLocalidad(Localidad instance);
    partial void UpdateLocalidad(Localidad instance);
    partial void DeleteLocalidad(Localidad instance);
    partial void InsertMensaje(Mensaje instance);
    partial void UpdateMensaje(Mensaje instance);
    partial void DeleteMensaje(Mensaje instance);
    partial void InsertNoticia(Noticia instance);
    partial void UpdateNoticia(Noticia instance);
    partial void DeleteNoticia(Noticia instance);
    partial void InsertPais(Pais instance);
    partial void UpdatePais(Pais instance);
    partial void DeletePais(Pais instance);
    partial void InsertProducto(Producto instance);
    partial void UpdateProducto(Producto instance);
    partial void DeleteProducto(Producto instance);
    partial void InsertProducto_Tag(Producto_Tag instance);
    partial void UpdateProducto_Tag(Producto_Tag instance);
    partial void DeleteProducto_Tag(Producto_Tag instance);
    partial void InsertRegion(Region instance);
    partial void UpdateRegion(Region instance);
    partial void DeleteRegion(Region instance);
    partial void InsertTAGS(TAGS instance);
    partial void UpdateTAGS(TAGS instance);
    partial void DeleteTAGS(TAGS instance);
    partial void InsertTienda(Tienda instance);
    partial void UpdateTienda(Tienda instance);
    partial void DeleteTienda(Tienda instance);
    partial void InsertTipo_Dueno(Tipo_Dueno instance);
    partial void UpdateTipo_Dueno(Tipo_Dueno instance);
    partial void DeleteTipo_Dueno(Tipo_Dueno instance);
    partial void InsertTipo_Imagen(Tipo_Imagen instance);
    partial void UpdateTipo_Imagen(Tipo_Imagen instance);
    partial void DeleteTipo_Imagen(Tipo_Imagen instance);
    partial void InsertTipo_Noticia(Tipo_Noticia instance);
    partial void UpdateTipo_Noticia(Tipo_Noticia instance);
    partial void DeleteTipo_Noticia(Tipo_Noticia instance);
    #endregion
		
		public WardrobeDataContext() : 
				base(global::Wardrobe.Dao.Properties.Settings.Default.WardrobeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WardrobeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WardrobeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WardrobeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WardrobeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Codigo> Codigo
		{
			get
			{
				return this.GetTable<Codigo>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Comuna> Comuna
		{
			get
			{
				return this.GetTable<Comuna>();
			}
		}
		
		public System.Data.Linq.Table<Estado> Estado
		{
			get
			{
				return this.GetTable<Estado>();
			}
		}
		
		public System.Data.Linq.Table<Estado_Mensaje> Estado_Mensaje
		{
			get
			{
				return this.GetTable<Estado_Mensaje>();
			}
		}
		
		public System.Data.Linq.Table<Estado_Noticia> Estado_Noticia
		{
			get
			{
				return this.GetTable<Estado_Noticia>();
			}
		}
		
		public System.Data.Linq.Table<ESTADO_PRENDA> ESTADO_PRENDA
		{
			get
			{
				return this.GetTable<ESTADO_PRENDA>();
			}
		}
		
		public System.Data.Linq.Table<Estado_Tienda> Estado_Tienda
		{
			get
			{
				return this.GetTable<Estado_Tienda>();
			}
		}
		
		public System.Data.Linq.Table<Estado_Usuario> Estado_Usuario
		{
			get
			{
				return this.GetTable<Estado_Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Imagen> Imagen
		{
			get
			{
				return this.GetTable<Imagen>();
			}
		}
		
		public System.Data.Linq.Table<Imagen_Producto> Imagen_Producto
		{
			get
			{
				return this.GetTable<Imagen_Producto>();
			}
		}
		
		public System.Data.Linq.Table<Localidad> Localidad
		{
			get
			{
				return this.GetTable<Localidad>();
			}
		}
		
		public System.Data.Linq.Table<Mensaje> Mensaje
		{
			get
			{
				return this.GetTable<Mensaje>();
			}
		}
		
		public System.Data.Linq.Table<Noticia> Noticia
		{
			get
			{
				return this.GetTable<Noticia>();
			}
		}
		
		public System.Data.Linq.Table<Noticia_Tienda> Noticia_Tienda
		{
			get
			{
				return this.GetTable<Noticia_Tienda>();
			}
		}
		
		public System.Data.Linq.Table<Pais> Pais
		{
			get
			{
				return this.GetTable<Pais>();
			}
		}
		
		public System.Data.Linq.Table<Producto> Producto
		{
			get
			{
				return this.GetTable<Producto>();
			}
		}
		
		public System.Data.Linq.Table<Producto_Tag> Producto_Tag
		{
			get
			{
				return this.GetTable<Producto_Tag>();
			}
		}
		
		public System.Data.Linq.Table<Region> Region
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<TAGS> TAGS
		{
			get
			{
				return this.GetTable<TAGS>();
			}
		}
		
		public System.Data.Linq.Table<Tienda> Tienda
		{
			get
			{
				return this.GetTable<Tienda>();
			}
		}
		
		public System.Data.Linq.Table<Tipo_Dueno> Tipo_Dueno
		{
			get
			{
				return this.GetTable<Tipo_Dueno>();
			}
		}
		
		public System.Data.Linq.Table<Tipo_Imagen> Tipo_Imagen
		{
			get
			{
				return this.GetTable<Tipo_Imagen>();
			}
		}
		
		public System.Data.Linq.Table<Tipo_Noticia> Tipo_Noticia
		{
			get
			{
				return this.GetTable<Tipo_Noticia>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Codigo")]
	public partial class Codigo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_CODIGO;
		
		private string _CODIGO1;
		
		private System.Nullable<System.DateTime> _FECHA_EXPIRACION;
		
		private System.Nullable<int> _ID_ESTADO;
		
		private System.Nullable<int> _ID_TIENDA;
		
		private EntityRef<Estado> _Estado;
		
		private EntityRef<Tienda> _Tienda;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CODIGOChanging(int value);
    partial void OnID_CODIGOChanged();
    partial void OnCODIGO1Changing(string value);
    partial void OnCODIGO1Changed();
    partial void OnFECHA_EXPIRACIONChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHA_EXPIRACIONChanged();
    partial void OnID_ESTADOChanging(System.Nullable<int> value);
    partial void OnID_ESTADOChanged();
    partial void OnID_TIENDAChanging(System.Nullable<int> value);
    partial void OnID_TIENDAChanged();
    #endregion
		
		public Codigo()
		{
			this._Estado = default(EntityRef<Estado>);
			this._Tienda = default(EntityRef<Tienda>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CODIGO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_CODIGO
		{
			get
			{
				return this._ID_CODIGO;
			}
			set
			{
				if ((this._ID_CODIGO != value))
				{
					this.OnID_CODIGOChanging(value);
					this.SendPropertyChanging();
					this._ID_CODIGO = value;
					this.SendPropertyChanged("ID_CODIGO");
					this.OnID_CODIGOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CODIGO", Storage="_CODIGO1", DbType="VarChar(100)")]
		public string CODIGO1
		{
			get
			{
				return this._CODIGO1;
			}
			set
			{
				if ((this._CODIGO1 != value))
				{
					this.OnCODIGO1Changing(value);
					this.SendPropertyChanging();
					this._CODIGO1 = value;
					this.SendPropertyChanged("CODIGO1");
					this.OnCODIGO1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA_EXPIRACION", DbType="DateTime")]
		public System.Nullable<System.DateTime> FECHA_EXPIRACION
		{
			get
			{
				return this._FECHA_EXPIRACION;
			}
			set
			{
				if ((this._FECHA_EXPIRACION != value))
				{
					this.OnFECHA_EXPIRACIONChanging(value);
					this.SendPropertyChanging();
					this._FECHA_EXPIRACION = value;
					this.SendPropertyChanged("FECHA_EXPIRACION");
					this.OnFECHA_EXPIRACIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTADO", DbType="Int")]
		public System.Nullable<int> ID_ESTADO
		{
			get
			{
				return this._ID_ESTADO;
			}
			set
			{
				if ((this._ID_ESTADO != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ESTADOChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTADO = value;
					this.SendPropertyChanged("ID_ESTADO");
					this.OnID_ESTADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIENDA", DbType="Int")]
		public System.Nullable<int> ID_TIENDA
		{
			get
			{
				return this._ID_TIENDA;
			}
			set
			{
				if ((this._ID_TIENDA != value))
				{
					if (this._Tienda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TIENDAChanging(value);
					this.SendPropertyChanging();
					this._ID_TIENDA = value;
					this.SendPropertyChanged("ID_TIENDA");
					this.OnID_TIENDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Codigo", Storage="_Estado", ThisKey="ID_ESTADO", OtherKey="ID_ESTADO", IsForeignKey=true)]
		public Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.Codigo.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.Codigo.Add(this);
						this._ID_ESTADO = value.ID_ESTADO;
					}
					else
					{
						this._ID_ESTADO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tienda_Codigo", Storage="_Tienda", ThisKey="ID_TIENDA", OtherKey="ID_TIENDA", IsForeignKey=true)]
		public Tienda Tienda
		{
			get
			{
				return this._Tienda.Entity;
			}
			set
			{
				Tienda previousValue = this._Tienda.Entity;
				if (((previousValue != value) 
							|| (this._Tienda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tienda.Entity = null;
						previousValue.Codigo.Remove(this);
					}
					this._Tienda.Entity = value;
					if ((value != null))
					{
						value.Codigo.Add(this);
						this._ID_TIENDA = value.ID_TIENDA;
					}
					else
					{
						this._ID_TIENDA = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tienda");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_USUARIO;
		
		private string _NOMBRE;
		
		private string _APELLIDO;
		
		private string _EMAIL;
		
		private string _TELEFONO;
		
		private string _USUARIO1;
		
		private string _PASSWORD;
		
		private System.Nullable<int> _ID_TIENDA;
		
		private System.Nullable<int> _ID_ESTADO;
		
		private EntityRef<Estado_Usuario> _Estado_Usuario;
		
		private EntitySet<Mensaje> _Mensaje;
		
		private EntitySet<Mensaje> _Mensaje1;
		
		private EntityRef<Tienda> _Tienda;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_USUARIOChanging(int value);
    partial void OnID_USUARIOChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnAPELLIDOChanging(string value);
    partial void OnAPELLIDOChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnTELEFONOChanging(string value);
    partial void OnTELEFONOChanged();
    partial void OnUSUARIO1Changing(string value);
    partial void OnUSUARIO1Changed();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnID_TIENDAChanging(System.Nullable<int> value);
    partial void OnID_TIENDAChanged();
    partial void OnID_ESTADOChanging(System.Nullable<int> value);
    partial void OnID_ESTADOChanged();
    #endregion
		
		public Usuario()
		{
			this._Estado_Usuario = default(EntityRef<Estado_Usuario>);
			this._Mensaje = new EntitySet<Mensaje>(new Action<Mensaje>(this.attach_Mensaje), new Action<Mensaje>(this.detach_Mensaje));
			this._Mensaje1 = new EntitySet<Mensaje>(new Action<Mensaje>(this.attach_Mensaje1), new Action<Mensaje>(this.detach_Mensaje1));
			this._Tienda = default(EntityRef<Tienda>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_USUARIO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_USUARIO
		{
			get
			{
				return this._ID_USUARIO;
			}
			set
			{
				if ((this._ID_USUARIO != value))
				{
					this.OnID_USUARIOChanging(value);
					this.SendPropertyChanging();
					this._ID_USUARIO = value;
					this.SendPropertyChanged("ID_USUARIO");
					this.OnID_USUARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APELLIDO", DbType="VarChar(50)")]
		public string APELLIDO
		{
			get
			{
				return this._APELLIDO;
			}
			set
			{
				if ((this._APELLIDO != value))
				{
					this.OnAPELLIDOChanging(value);
					this.SendPropertyChanging();
					this._APELLIDO = value;
					this.SendPropertyChanged("APELLIDO");
					this.OnAPELLIDOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEFONO", DbType="VarChar(50)")]
		public string TELEFONO
		{
			get
			{
				return this._TELEFONO;
			}
			set
			{
				if ((this._TELEFONO != value))
				{
					this.OnTELEFONOChanging(value);
					this.SendPropertyChanging();
					this._TELEFONO = value;
					this.SendPropertyChanged("TELEFONO");
					this.OnTELEFONOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="USUARIO", Storage="_USUARIO1", DbType="VarChar(50)")]
		public string USUARIO1
		{
			get
			{
				return this._USUARIO1;
			}
			set
			{
				if ((this._USUARIO1 != value))
				{
					this.OnUSUARIO1Changing(value);
					this.SendPropertyChanging();
					this._USUARIO1 = value;
					this.SendPropertyChanged("USUARIO1");
					this.OnUSUARIO1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="VarChar(50)")]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIENDA", DbType="Int")]
		public System.Nullable<int> ID_TIENDA
		{
			get
			{
				return this._ID_TIENDA;
			}
			set
			{
				if ((this._ID_TIENDA != value))
				{
					if (this._Tienda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TIENDAChanging(value);
					this.SendPropertyChanging();
					this._ID_TIENDA = value;
					this.SendPropertyChanged("ID_TIENDA");
					this.OnID_TIENDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTADO", DbType="Int")]
		public System.Nullable<int> ID_ESTADO
		{
			get
			{
				return this._ID_ESTADO;
			}
			set
			{
				if ((this._ID_ESTADO != value))
				{
					this.OnID_ESTADOChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTADO = value;
					this.SendPropertyChanged("ID_ESTADO");
					this.OnID_ESTADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Estado_Usuario", Storage="_Estado_Usuario", ThisKey="ID_USUARIO", OtherKey="ID_ESTADO_USUARIO", IsUnique=true, IsForeignKey=false)]
		public Estado_Usuario Estado_Usuario
		{
			get
			{
				return this._Estado_Usuario.Entity;
			}
			set
			{
				Estado_Usuario previousValue = this._Estado_Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Estado_Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado_Usuario.Entity = null;
						previousValue.Usuario = null;
					}
					this._Estado_Usuario.Entity = value;
					if ((value != null))
					{
						value.Usuario = this;
					}
					this.SendPropertyChanged("Estado_Usuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Mensaje", Storage="_Mensaje", ThisKey="ID_USUARIO", OtherKey="id_usuario_para")]
		public EntitySet<Mensaje> Mensaje
		{
			get
			{
				return this._Mensaje;
			}
			set
			{
				this._Mensaje.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Mensaje1", Storage="_Mensaje1", ThisKey="ID_USUARIO", OtherKey="id_usuario_de")]
		public EntitySet<Mensaje> Mensaje1
		{
			get
			{
				return this._Mensaje1;
			}
			set
			{
				this._Mensaje1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tienda_Usuario", Storage="_Tienda", ThisKey="ID_TIENDA", OtherKey="ID_TIENDA", IsForeignKey=true)]
		public Tienda Tienda
		{
			get
			{
				return this._Tienda.Entity;
			}
			set
			{
				Tienda previousValue = this._Tienda.Entity;
				if (((previousValue != value) 
							|| (this._Tienda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tienda.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Tienda.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._ID_TIENDA = value.ID_TIENDA;
					}
					else
					{
						this._ID_TIENDA = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tienda");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mensaje(Mensaje entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Mensaje(Mensaje entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Mensaje1(Mensaje entity)
		{
			this.SendPropertyChanging();
			entity.Usuario1 = this;
		}
		
		private void detach_Mensaje1(Mensaje entity)
		{
			this.SendPropertyChanging();
			entity.Usuario1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comuna")]
	public partial class Comuna : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_COMUNA;
		
		private string _NOMBRE;
		
		private System.Nullable<int> _ID_REGION;
		
		private EntitySet<Localidad> _Localidad;
		
		private EntityRef<Region> _Region;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_COMUNAChanging(int value);
    partial void OnID_COMUNAChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnID_REGIONChanging(System.Nullable<int> value);
    partial void OnID_REGIONChanged();
    #endregion
		
		public Comuna()
		{
			this._Localidad = new EntitySet<Localidad>(new Action<Localidad>(this.attach_Localidad), new Action<Localidad>(this.detach_Localidad));
			this._Region = default(EntityRef<Region>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_COMUNA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_COMUNA
		{
			get
			{
				return this._ID_COMUNA;
			}
			set
			{
				if ((this._ID_COMUNA != value))
				{
					this.OnID_COMUNAChanging(value);
					this.SendPropertyChanging();
					this._ID_COMUNA = value;
					this.SendPropertyChanged("ID_COMUNA");
					this.OnID_COMUNAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_REGION", DbType="Int")]
		public System.Nullable<int> ID_REGION
		{
			get
			{
				return this._ID_REGION;
			}
			set
			{
				if ((this._ID_REGION != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_REGIONChanging(value);
					this.SendPropertyChanging();
					this._ID_REGION = value;
					this.SendPropertyChanged("ID_REGION");
					this.OnID_REGIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comuna_Localidad", Storage="_Localidad", ThisKey="ID_COMUNA", OtherKey="ID_COMUNA")]
		public EntitySet<Localidad> Localidad
		{
			get
			{
				return this._Localidad;
			}
			set
			{
				this._Localidad.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Comuna", Storage="_Region", ThisKey="ID_REGION", OtherKey="ID_REGION", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				Region previousValue = this._Region.Entity;
				if (((previousValue != value) 
							|| (this._Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region.Entity = null;
						previousValue.Comuna.Remove(this);
					}
					this._Region.Entity = value;
					if ((value != null))
					{
						value.Comuna.Add(this);
						this._ID_REGION = value.ID_REGION;
					}
					else
					{
						this._ID_REGION = default(Nullable<int>);
					}
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Localidad(Localidad entity)
		{
			this.SendPropertyChanging();
			entity.Comuna = this;
		}
		
		private void detach_Localidad(Localidad entity)
		{
			this.SendPropertyChanging();
			entity.Comuna = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estado")]
	public partial class Estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ESTADO;
		
		private string _DESCRIPCION;
		
		private EntitySet<Codigo> _Codigo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ESTADOChanging(int value);
    partial void OnID_ESTADOChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public Estado()
		{
			this._Codigo = new EntitySet<Codigo>(new Action<Codigo>(this.attach_Codigo), new Action<Codigo>(this.detach_Codigo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTADO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ESTADO
		{
			get
			{
				return this._ID_ESTADO;
			}
			set
			{
				if ((this._ID_ESTADO != value))
				{
					this.OnID_ESTADOChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTADO = value;
					this.SendPropertyChanged("ID_ESTADO");
					this.OnID_ESTADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(50)")]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Codigo", Storage="_Codigo", ThisKey="ID_ESTADO", OtherKey="ID_ESTADO")]
		public EntitySet<Codigo> Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				this._Codigo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Codigo(Codigo entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_Codigo(Codigo entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estado_Mensaje")]
	public partial class Estado_Mensaje : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_estado_mensaje;
		
		private string _nombre;
		
		private EntitySet<Mensaje> _Mensaje;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_estado_mensajeChanging(int value);
    partial void Onid_estado_mensajeChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public Estado_Mensaje()
		{
			this._Mensaje = new EntitySet<Mensaje>(new Action<Mensaje>(this.attach_Mensaje), new Action<Mensaje>(this.detach_Mensaje));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado_mensaje", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_estado_mensaje
		{
			get
			{
				return this._id_estado_mensaje;
			}
			set
			{
				if ((this._id_estado_mensaje != value))
				{
					this.Onid_estado_mensajeChanging(value);
					this.SendPropertyChanging();
					this._id_estado_mensaje = value;
					this.SendPropertyChanged("id_estado_mensaje");
					this.Onid_estado_mensajeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Mensaje_Mensaje", Storage="_Mensaje", ThisKey="id_estado_mensaje", OtherKey="id_estado")]
		public EntitySet<Mensaje> Mensaje
		{
			get
			{
				return this._Mensaje;
			}
			set
			{
				this._Mensaje.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mensaje(Mensaje entity)
		{
			this.SendPropertyChanging();
			entity.Estado_Mensaje = this;
		}
		
		private void detach_Mensaje(Mensaje entity)
		{
			this.SendPropertyChanging();
			entity.Estado_Mensaje = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estado_Noticia")]
	public partial class Estado_Noticia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_estado_noticia;
		
		private string _nombre;
		
		private EntitySet<Noticia> _Noticia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_estado_noticiaChanging(int value);
    partial void Onid_estado_noticiaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public Estado_Noticia()
		{
			this._Noticia = new EntitySet<Noticia>(new Action<Noticia>(this.attach_Noticia), new Action<Noticia>(this.detach_Noticia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado_noticia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_estado_noticia
		{
			get
			{
				return this._id_estado_noticia;
			}
			set
			{
				if ((this._id_estado_noticia != value))
				{
					this.Onid_estado_noticiaChanging(value);
					this.SendPropertyChanging();
					this._id_estado_noticia = value;
					this.SendPropertyChanged("id_estado_noticia");
					this.Onid_estado_noticiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Noticia_Noticia", Storage="_Noticia", ThisKey="id_estado_noticia", OtherKey="ID_ESTADO")]
		public EntitySet<Noticia> Noticia
		{
			get
			{
				return this._Noticia;
			}
			set
			{
				this._Noticia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Noticia(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Estado_Noticia = this;
		}
		
		private void detach_Noticia(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Estado_Noticia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESTADO_PRENDA")]
	public partial class ESTADO_PRENDA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ESTADO_PRENDA;
		
		private string _NOMBRE;
		
		private EntitySet<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ESTADO_PRENDAChanging(int value);
    partial void OnID_ESTADO_PRENDAChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    #endregion
		
		public ESTADO_PRENDA()
		{
			this._Producto = new EntitySet<Producto>(new Action<Producto>(this.attach_Producto), new Action<Producto>(this.detach_Producto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTADO_PRENDA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ESTADO_PRENDA
		{
			get
			{
				return this._ID_ESTADO_PRENDA;
			}
			set
			{
				if ((this._ID_ESTADO_PRENDA != value))
				{
					this.OnID_ESTADO_PRENDAChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTADO_PRENDA = value;
					this.SendPropertyChanged("ID_ESTADO_PRENDA");
					this.OnID_ESTADO_PRENDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTADO_PRENDA_Producto", Storage="_Producto", ThisKey="ID_ESTADO_PRENDA", OtherKey="ID_ESTADO")]
		public EntitySet<Producto> Producto
		{
			get
			{
				return this._Producto;
			}
			set
			{
				this._Producto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.ESTADO_PRENDA = this;
		}
		
		private void detach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.ESTADO_PRENDA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estado_Tienda")]
	public partial class Estado_Tienda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ESTADO_TIENDA;
		
		private string _NOMBRE;
		
		private EntitySet<Tienda> _Tienda;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ESTADO_TIENDAChanging(int value);
    partial void OnID_ESTADO_TIENDAChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    #endregion
		
		public Estado_Tienda()
		{
			this._Tienda = new EntitySet<Tienda>(new Action<Tienda>(this.attach_Tienda), new Action<Tienda>(this.detach_Tienda));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTADO_TIENDA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ESTADO_TIENDA
		{
			get
			{
				return this._ID_ESTADO_TIENDA;
			}
			set
			{
				if ((this._ID_ESTADO_TIENDA != value))
				{
					this.OnID_ESTADO_TIENDAChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTADO_TIENDA = value;
					this.SendPropertyChanged("ID_ESTADO_TIENDA");
					this.OnID_ESTADO_TIENDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Tienda_Tienda", Storage="_Tienda", ThisKey="ID_ESTADO_TIENDA", OtherKey="ID_ESTADO")]
		public EntitySet<Tienda> Tienda
		{
			get
			{
				return this._Tienda;
			}
			set
			{
				this._Tienda.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tienda(Tienda entity)
		{
			this.SendPropertyChanging();
			entity.Estado_Tienda = this;
		}
		
		private void detach_Tienda(Tienda entity)
		{
			this.SendPropertyChanging();
			entity.Estado_Tienda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estado_Usuario")]
	public partial class Estado_Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ESTADO_USUARIO;
		
		private string _NOMBRE;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ESTADO_USUARIOChanging(int value);
    partial void OnID_ESTADO_USUARIOChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    #endregion
		
		public Estado_Usuario()
		{
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTADO_USUARIO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ESTADO_USUARIO
		{
			get
			{
				return this._ID_ESTADO_USUARIO;
			}
			set
			{
				if ((this._ID_ESTADO_USUARIO != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ESTADO_USUARIOChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTADO_USUARIO = value;
					this.SendPropertyChanged("ID_ESTADO_USUARIO");
					this.OnID_ESTADO_USUARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Estado_Usuario", Storage="_Usuario", ThisKey="ID_ESTADO_USUARIO", OtherKey="ID_USUARIO", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Estado_Usuario = null;
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Estado_Usuario = this;
						this._ID_ESTADO_USUARIO = value.ID_USUARIO;
					}
					else
					{
						this._ID_ESTADO_USUARIO = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Imagen")]
	public partial class Imagen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_IMAGEN;
		
		private string _URL;
		
		private System.Nullable<int> _ID_TIPO_IMAGEN;
		
		private System.Nullable<int> _ID_DUENO;
		
		private System.Nullable<int> _ID_TIPO_DUENO;
		
		private System.Data.Linq.Binary _TIMESTAMP;
		
		private EntitySet<Noticia> _Noticia;
		
		private EntityRef<Tipo_Dueno> _Tipo_Dueno;
		
		private EntityRef<Tipo_Imagen> _Tipo_Imagen;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_IMAGENChanging(int value);
    partial void OnID_IMAGENChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnID_TIPO_IMAGENChanging(System.Nullable<int> value);
    partial void OnID_TIPO_IMAGENChanged();
    partial void OnID_DUENOChanging(System.Nullable<int> value);
    partial void OnID_DUENOChanged();
    partial void OnID_TIPO_DUENOChanging(System.Nullable<int> value);
    partial void OnID_TIPO_DUENOChanged();
    partial void OnTIMESTAMPChanging(System.Data.Linq.Binary value);
    partial void OnTIMESTAMPChanged();
    #endregion
		
		public Imagen()
		{
			this._Noticia = new EntitySet<Noticia>(new Action<Noticia>(this.attach_Noticia), new Action<Noticia>(this.detach_Noticia));
			this._Tipo_Dueno = default(EntityRef<Tipo_Dueno>);
			this._Tipo_Imagen = default(EntityRef<Tipo_Imagen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_IMAGEN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID_IMAGEN
		{
			get
			{
				return this._ID_IMAGEN;
			}
			set
			{
				if ((this._ID_IMAGEN != value))
				{
					this.OnID_IMAGENChanging(value);
					this.SendPropertyChanging();
					this._ID_IMAGEN = value;
					this.SendPropertyChanged("ID_IMAGEN");
					this.OnID_IMAGENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIPO_IMAGEN", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ID_TIPO_IMAGEN
		{
			get
			{
				return this._ID_TIPO_IMAGEN;
			}
			set
			{
				if ((this._ID_TIPO_IMAGEN != value))
				{
					if (this._Tipo_Imagen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TIPO_IMAGENChanging(value);
					this.SendPropertyChanging();
					this._ID_TIPO_IMAGEN = value;
					this.SendPropertyChanged("ID_TIPO_IMAGEN");
					this.OnID_TIPO_IMAGENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DUENO", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ID_DUENO
		{
			get
			{
				return this._ID_DUENO;
			}
			set
			{
				if ((this._ID_DUENO != value))
				{
					this.OnID_DUENOChanging(value);
					this.SendPropertyChanging();
					this._ID_DUENO = value;
					this.SendPropertyChanged("ID_DUENO");
					this.OnID_DUENOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIPO_DUENO", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ID_TIPO_DUENO
		{
			get
			{
				return this._ID_TIPO_DUENO;
			}
			set
			{
				if ((this._ID_TIPO_DUENO != value))
				{
					if (this._Tipo_Dueno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TIPO_DUENOChanging(value);
					this.SendPropertyChanging();
					this._ID_TIPO_DUENO = value;
					this.SendPropertyChanged("ID_TIPO_DUENO");
					this.OnID_TIPO_DUENOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIMESTAMP", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TIMESTAMP
		{
			get
			{
				return this._TIMESTAMP;
			}
			set
			{
				if ((this._TIMESTAMP != value))
				{
					this.OnTIMESTAMPChanging(value);
					this.SendPropertyChanging();
					this._TIMESTAMP = value;
					this.SendPropertyChanged("TIMESTAMP");
					this.OnTIMESTAMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imagen_Noticia", Storage="_Noticia", ThisKey="ID_IMAGEN", OtherKey="ID_IMAGEN")]
		public EntitySet<Noticia> Noticia
		{
			get
			{
				return this._Noticia;
			}
			set
			{
				this._Noticia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Dueno_Imagen", Storage="_Tipo_Dueno", ThisKey="ID_TIPO_DUENO", OtherKey="ID_TIPO_DUENO", IsForeignKey=true)]
		public Tipo_Dueno Tipo_Dueno
		{
			get
			{
				return this._Tipo_Dueno.Entity;
			}
			set
			{
				Tipo_Dueno previousValue = this._Tipo_Dueno.Entity;
				if (((previousValue != value) 
							|| (this._Tipo_Dueno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo_Dueno.Entity = null;
						previousValue.Imagen.Remove(this);
					}
					this._Tipo_Dueno.Entity = value;
					if ((value != null))
					{
						value.Imagen.Add(this);
						this._ID_TIPO_DUENO = value.ID_TIPO_DUENO;
					}
					else
					{
						this._ID_TIPO_DUENO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tipo_Dueno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Imagen_Imagen", Storage="_Tipo_Imagen", ThisKey="ID_TIPO_IMAGEN", OtherKey="ID_TIPO_IMAGEN", IsForeignKey=true)]
		public Tipo_Imagen Tipo_Imagen
		{
			get
			{
				return this._Tipo_Imagen.Entity;
			}
			set
			{
				Tipo_Imagen previousValue = this._Tipo_Imagen.Entity;
				if (((previousValue != value) 
							|| (this._Tipo_Imagen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo_Imagen.Entity = null;
						previousValue.Imagen.Remove(this);
					}
					this._Tipo_Imagen.Entity = value;
					if ((value != null))
					{
						value.Imagen.Add(this);
						this._ID_TIPO_IMAGEN = value.ID_TIPO_IMAGEN;
					}
					else
					{
						this._ID_TIPO_IMAGEN = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tipo_Imagen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Noticia(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Imagen = this;
		}
		
		private void detach_Noticia(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Imagen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Imagen_Producto")]
	public partial class Imagen_Producto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_IMAGEN_PRODUCTO;
		
		private string _URL;
		
		private System.Nullable<int> _ID_PRODUCTO;
		
		private EntityRef<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_IMAGEN_PRODUCTOChanging(int value);
    partial void OnID_IMAGEN_PRODUCTOChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnID_PRODUCTOChanging(System.Nullable<int> value);
    partial void OnID_PRODUCTOChanged();
    #endregion
		
		public Imagen_Producto()
		{
			this._Producto = default(EntityRef<Producto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_IMAGEN_PRODUCTO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_IMAGEN_PRODUCTO
		{
			get
			{
				return this._ID_IMAGEN_PRODUCTO;
			}
			set
			{
				if ((this._ID_IMAGEN_PRODUCTO != value))
				{
					this.OnID_IMAGEN_PRODUCTOChanging(value);
					this.SendPropertyChanging();
					this._ID_IMAGEN_PRODUCTO = value;
					this.SendPropertyChanged("ID_IMAGEN_PRODUCTO");
					this.OnID_IMAGEN_PRODUCTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(MAX)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PRODUCTO", DbType="Int")]
		public System.Nullable<int> ID_PRODUCTO
		{
			get
			{
				return this._ID_PRODUCTO;
			}
			set
			{
				if ((this._ID_PRODUCTO != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PRODUCTOChanging(value);
					this.SendPropertyChanging();
					this._ID_PRODUCTO = value;
					this.SendPropertyChanged("ID_PRODUCTO");
					this.OnID_PRODUCTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Imagen_Producto", Storage="_Producto", ThisKey="ID_PRODUCTO", OtherKey="ID_PRODUCTO", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.Imagen_Producto.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.Imagen_Producto.Add(this);
						this._ID_PRODUCTO = value.ID_PRODUCTO;
					}
					else
					{
						this._ID_PRODUCTO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Localidad")]
	public partial class Localidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_LOCALIDAD;
		
		private string _CALLE;
		
		private string _NUMERO;
		
		private System.Nullable<int> _ID_TIENDA;
		
		private System.Nullable<int> _ID_COMUNA;
		
		private EntityRef<Comuna> _Comuna;
		
		private EntityRef<Tienda> _Tienda;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LOCALIDADChanging(int value);
    partial void OnID_LOCALIDADChanged();
    partial void OnCALLEChanging(string value);
    partial void OnCALLEChanged();
    partial void OnNUMEROChanging(string value);
    partial void OnNUMEROChanged();
    partial void OnID_TIENDAChanging(System.Nullable<int> value);
    partial void OnID_TIENDAChanged();
    partial void OnID_COMUNAChanging(System.Nullable<int> value);
    partial void OnID_COMUNAChanged();
    #endregion
		
		public Localidad()
		{
			this._Comuna = default(EntityRef<Comuna>);
			this._Tienda = default(EntityRef<Tienda>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOCALIDAD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_LOCALIDAD
		{
			get
			{
				return this._ID_LOCALIDAD;
			}
			set
			{
				if ((this._ID_LOCALIDAD != value))
				{
					this.OnID_LOCALIDADChanging(value);
					this.SendPropertyChanging();
					this._ID_LOCALIDAD = value;
					this.SendPropertyChanged("ID_LOCALIDAD");
					this.OnID_LOCALIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CALLE", DbType="VarChar(50)")]
		public string CALLE
		{
			get
			{
				return this._CALLE;
			}
			set
			{
				if ((this._CALLE != value))
				{
					this.OnCALLEChanging(value);
					this.SendPropertyChanging();
					this._CALLE = value;
					this.SendPropertyChanged("CALLE");
					this.OnCALLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMERO", DbType="VarChar(50)")]
		public string NUMERO
		{
			get
			{
				return this._NUMERO;
			}
			set
			{
				if ((this._NUMERO != value))
				{
					this.OnNUMEROChanging(value);
					this.SendPropertyChanging();
					this._NUMERO = value;
					this.SendPropertyChanged("NUMERO");
					this.OnNUMEROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIENDA", DbType="Int")]
		public System.Nullable<int> ID_TIENDA
		{
			get
			{
				return this._ID_TIENDA;
			}
			set
			{
				if ((this._ID_TIENDA != value))
				{
					if (this._Tienda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TIENDAChanging(value);
					this.SendPropertyChanging();
					this._ID_TIENDA = value;
					this.SendPropertyChanged("ID_TIENDA");
					this.OnID_TIENDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_COMUNA", DbType="Int")]
		public System.Nullable<int> ID_COMUNA
		{
			get
			{
				return this._ID_COMUNA;
			}
			set
			{
				if ((this._ID_COMUNA != value))
				{
					if (this._Comuna.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_COMUNAChanging(value);
					this.SendPropertyChanging();
					this._ID_COMUNA = value;
					this.SendPropertyChanged("ID_COMUNA");
					this.OnID_COMUNAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comuna_Localidad", Storage="_Comuna", ThisKey="ID_COMUNA", OtherKey="ID_COMUNA", IsForeignKey=true)]
		public Comuna Comuna
		{
			get
			{
				return this._Comuna.Entity;
			}
			set
			{
				Comuna previousValue = this._Comuna.Entity;
				if (((previousValue != value) 
							|| (this._Comuna.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comuna.Entity = null;
						previousValue.Localidad.Remove(this);
					}
					this._Comuna.Entity = value;
					if ((value != null))
					{
						value.Localidad.Add(this);
						this._ID_COMUNA = value.ID_COMUNA;
					}
					else
					{
						this._ID_COMUNA = default(Nullable<int>);
					}
					this.SendPropertyChanged("Comuna");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tienda_Localidad", Storage="_Tienda", ThisKey="ID_TIENDA", OtherKey="ID_TIENDA", IsForeignKey=true)]
		public Tienda Tienda
		{
			get
			{
				return this._Tienda.Entity;
			}
			set
			{
				Tienda previousValue = this._Tienda.Entity;
				if (((previousValue != value) 
							|| (this._Tienda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tienda.Entity = null;
						previousValue.Localidad.Remove(this);
					}
					this._Tienda.Entity = value;
					if ((value != null))
					{
						value.Localidad.Add(this);
						this._ID_TIENDA = value.ID_TIENDA;
					}
					else
					{
						this._ID_TIENDA = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tienda");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mensaje")]
	public partial class Mensaje : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_mensaje;
		
		private string _asunto;
		
		private string _mensaje1;
		
		private System.Nullable<System.DateTime> _fecha_envio;
		
		private System.Nullable<int> _id_usuario_para;
		
		private System.Nullable<int> _id_usuario_de;
		
		private System.Nullable<int> _id_estado;
		
		private EntityRef<Estado_Mensaje> _Estado_Mensaje;
		
		private EntityRef<Usuario> _Usuario;
		
		private EntityRef<Usuario> _Usuario1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_mensajeChanging(int value);
    partial void Onid_mensajeChanged();
    partial void OnasuntoChanging(string value);
    partial void OnasuntoChanged();
    partial void Onmensaje1Changing(string value);
    partial void Onmensaje1Changed();
    partial void Onfecha_envioChanging(System.Nullable<System.DateTime> value);
    partial void Onfecha_envioChanged();
    partial void Onid_usuario_paraChanging(System.Nullable<int> value);
    partial void Onid_usuario_paraChanged();
    partial void Onid_usuario_deChanging(System.Nullable<int> value);
    partial void Onid_usuario_deChanged();
    partial void Onid_estadoChanging(System.Nullable<int> value);
    partial void Onid_estadoChanged();
    #endregion
		
		public Mensaje()
		{
			this._Estado_Mensaje = default(EntityRef<Estado_Mensaje>);
			this._Usuario = default(EntityRef<Usuario>);
			this._Usuario1 = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_mensaje", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_mensaje
		{
			get
			{
				return this._id_mensaje;
			}
			set
			{
				if ((this._id_mensaje != value))
				{
					this.Onid_mensajeChanging(value);
					this.SendPropertyChanging();
					this._id_mensaje = value;
					this.SendPropertyChanged("id_mensaje");
					this.Onid_mensajeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_asunto", DbType="VarChar(50)")]
		public string asunto
		{
			get
			{
				return this._asunto;
			}
			set
			{
				if ((this._asunto != value))
				{
					this.OnasuntoChanging(value);
					this.SendPropertyChanging();
					this._asunto = value;
					this.SendPropertyChanged("asunto");
					this.OnasuntoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mensaje", Storage="_mensaje1", DbType="VarChar(50)")]
		public string mensaje1
		{
			get
			{
				return this._mensaje1;
			}
			set
			{
				if ((this._mensaje1 != value))
				{
					this.Onmensaje1Changing(value);
					this.SendPropertyChanging();
					this._mensaje1 = value;
					this.SendPropertyChanged("mensaje1");
					this.Onmensaje1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_envio", DbType="DateTime")]
		public System.Nullable<System.DateTime> fecha_envio
		{
			get
			{
				return this._fecha_envio;
			}
			set
			{
				if ((this._fecha_envio != value))
				{
					this.Onfecha_envioChanging(value);
					this.SendPropertyChanging();
					this._fecha_envio = value;
					this.SendPropertyChanged("fecha_envio");
					this.Onfecha_envioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_usuario_para", DbType="Int")]
		public System.Nullable<int> id_usuario_para
		{
			get
			{
				return this._id_usuario_para;
			}
			set
			{
				if ((this._id_usuario_para != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_usuario_paraChanging(value);
					this.SendPropertyChanging();
					this._id_usuario_para = value;
					this.SendPropertyChanged("id_usuario_para");
					this.Onid_usuario_paraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_usuario_de", DbType="Int")]
		public System.Nullable<int> id_usuario_de
		{
			get
			{
				return this._id_usuario_de;
			}
			set
			{
				if ((this._id_usuario_de != value))
				{
					if (this._Usuario1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_usuario_deChanging(value);
					this.SendPropertyChanging();
					this._id_usuario_de = value;
					this.SendPropertyChanged("id_usuario_de");
					this.Onid_usuario_deChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado", DbType="Int")]
		public System.Nullable<int> id_estado
		{
			get
			{
				return this._id_estado;
			}
			set
			{
				if ((this._id_estado != value))
				{
					if (this._Estado_Mensaje.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_estadoChanging(value);
					this.SendPropertyChanging();
					this._id_estado = value;
					this.SendPropertyChanged("id_estado");
					this.Onid_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Mensaje_Mensaje", Storage="_Estado_Mensaje", ThisKey="id_estado", OtherKey="id_estado_mensaje", IsForeignKey=true)]
		public Estado_Mensaje Estado_Mensaje
		{
			get
			{
				return this._Estado_Mensaje.Entity;
			}
			set
			{
				Estado_Mensaje previousValue = this._Estado_Mensaje.Entity;
				if (((previousValue != value) 
							|| (this._Estado_Mensaje.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado_Mensaje.Entity = null;
						previousValue.Mensaje.Remove(this);
					}
					this._Estado_Mensaje.Entity = value;
					if ((value != null))
					{
						value.Mensaje.Add(this);
						this._id_estado = value.id_estado_mensaje;
					}
					else
					{
						this._id_estado = default(Nullable<int>);
					}
					this.SendPropertyChanged("Estado_Mensaje");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Mensaje", Storage="_Usuario", ThisKey="id_usuario_para", OtherKey="ID_USUARIO", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Mensaje.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Mensaje.Add(this);
						this._id_usuario_para = value.ID_USUARIO;
					}
					else
					{
						this._id_usuario_para = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Mensaje1", Storage="_Usuario1", ThisKey="id_usuario_de", OtherKey="ID_USUARIO", IsForeignKey=true)]
		public Usuario Usuario1
		{
			get
			{
				return this._Usuario1.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario1.Entity;
				if (((previousValue != value) 
							|| (this._Usuario1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario1.Entity = null;
						previousValue.Mensaje1.Remove(this);
					}
					this._Usuario1.Entity = value;
					if ((value != null))
					{
						value.Mensaje1.Add(this);
						this._id_usuario_de = value.ID_USUARIO;
					}
					else
					{
						this._id_usuario_de = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuario1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Noticia")]
	public partial class Noticia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_NOTICIA;
		
		private string _DETALLE;
		
		private string _URL;
		
		private System.Nullable<int> _ID_IMAGEN;
		
		private System.Nullable<int> _ID_TIENDA;
		
		private System.Nullable<int> _ID_TIPO_NOTICIA;
		
		private System.Nullable<int> _ID_ESTADO;
		
		private EntityRef<Estado_Noticia> _Estado_Noticia;
		
		private EntityRef<Imagen> _Imagen;
		
		private EntityRef<Tienda> _Tienda;
		
		private EntityRef<Tipo_Noticia> _Tipo_Noticia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NOTICIAChanging(int value);
    partial void OnID_NOTICIAChanged();
    partial void OnDETALLEChanging(string value);
    partial void OnDETALLEChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnID_IMAGENChanging(System.Nullable<int> value);
    partial void OnID_IMAGENChanged();
    partial void OnID_TIENDAChanging(System.Nullable<int> value);
    partial void OnID_TIENDAChanged();
    partial void OnID_TIPO_NOTICIAChanging(System.Nullable<int> value);
    partial void OnID_TIPO_NOTICIAChanged();
    partial void OnID_ESTADOChanging(System.Nullable<int> value);
    partial void OnID_ESTADOChanged();
    #endregion
		
		public Noticia()
		{
			this._Estado_Noticia = default(EntityRef<Estado_Noticia>);
			this._Imagen = default(EntityRef<Imagen>);
			this._Tienda = default(EntityRef<Tienda>);
			this._Tipo_Noticia = default(EntityRef<Tipo_Noticia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NOTICIA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_NOTICIA
		{
			get
			{
				return this._ID_NOTICIA;
			}
			set
			{
				if ((this._ID_NOTICIA != value))
				{
					this.OnID_NOTICIAChanging(value);
					this.SendPropertyChanging();
					this._ID_NOTICIA = value;
					this.SendPropertyChanged("ID_NOTICIA");
					this.OnID_NOTICIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DETALLE", DbType="VarChar(500)")]
		public string DETALLE
		{
			get
			{
				return this._DETALLE;
			}
			set
			{
				if ((this._DETALLE != value))
				{
					this.OnDETALLEChanging(value);
					this.SendPropertyChanging();
					this._DETALLE = value;
					this.SendPropertyChanged("DETALLE");
					this.OnDETALLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(50)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_IMAGEN", DbType="Int")]
		public System.Nullable<int> ID_IMAGEN
		{
			get
			{
				return this._ID_IMAGEN;
			}
			set
			{
				if ((this._ID_IMAGEN != value))
				{
					if (this._Imagen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_IMAGENChanging(value);
					this.SendPropertyChanging();
					this._ID_IMAGEN = value;
					this.SendPropertyChanged("ID_IMAGEN");
					this.OnID_IMAGENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIENDA", DbType="Int")]
		public System.Nullable<int> ID_TIENDA
		{
			get
			{
				return this._ID_TIENDA;
			}
			set
			{
				if ((this._ID_TIENDA != value))
				{
					if (this._Tienda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TIENDAChanging(value);
					this.SendPropertyChanging();
					this._ID_TIENDA = value;
					this.SendPropertyChanged("ID_TIENDA");
					this.OnID_TIENDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIPO_NOTICIA", DbType="Int")]
		public System.Nullable<int> ID_TIPO_NOTICIA
		{
			get
			{
				return this._ID_TIPO_NOTICIA;
			}
			set
			{
				if ((this._ID_TIPO_NOTICIA != value))
				{
					if (this._Tipo_Noticia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TIPO_NOTICIAChanging(value);
					this.SendPropertyChanging();
					this._ID_TIPO_NOTICIA = value;
					this.SendPropertyChanged("ID_TIPO_NOTICIA");
					this.OnID_TIPO_NOTICIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTADO", DbType="Int")]
		public System.Nullable<int> ID_ESTADO
		{
			get
			{
				return this._ID_ESTADO;
			}
			set
			{
				if ((this._ID_ESTADO != value))
				{
					if (this._Estado_Noticia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ESTADOChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTADO = value;
					this.SendPropertyChanged("ID_ESTADO");
					this.OnID_ESTADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Noticia_Noticia", Storage="_Estado_Noticia", ThisKey="ID_ESTADO", OtherKey="id_estado_noticia", IsForeignKey=true)]
		public Estado_Noticia Estado_Noticia
		{
			get
			{
				return this._Estado_Noticia.Entity;
			}
			set
			{
				Estado_Noticia previousValue = this._Estado_Noticia.Entity;
				if (((previousValue != value) 
							|| (this._Estado_Noticia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado_Noticia.Entity = null;
						previousValue.Noticia.Remove(this);
					}
					this._Estado_Noticia.Entity = value;
					if ((value != null))
					{
						value.Noticia.Add(this);
						this._ID_ESTADO = value.id_estado_noticia;
					}
					else
					{
						this._ID_ESTADO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Estado_Noticia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imagen_Noticia", Storage="_Imagen", ThisKey="ID_IMAGEN", OtherKey="ID_IMAGEN", IsForeignKey=true)]
		public Imagen Imagen
		{
			get
			{
				return this._Imagen.Entity;
			}
			set
			{
				Imagen previousValue = this._Imagen.Entity;
				if (((previousValue != value) 
							|| (this._Imagen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Imagen.Entity = null;
						previousValue.Noticia.Remove(this);
					}
					this._Imagen.Entity = value;
					if ((value != null))
					{
						value.Noticia.Add(this);
						this._ID_IMAGEN = value.ID_IMAGEN;
					}
					else
					{
						this._ID_IMAGEN = default(Nullable<int>);
					}
					this.SendPropertyChanged("Imagen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tienda_Noticia", Storage="_Tienda", ThisKey="ID_TIENDA", OtherKey="ID_TIENDA", IsForeignKey=true)]
		public Tienda Tienda
		{
			get
			{
				return this._Tienda.Entity;
			}
			set
			{
				Tienda previousValue = this._Tienda.Entity;
				if (((previousValue != value) 
							|| (this._Tienda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tienda.Entity = null;
						previousValue.Noticia.Remove(this);
					}
					this._Tienda.Entity = value;
					if ((value != null))
					{
						value.Noticia.Add(this);
						this._ID_TIENDA = value.ID_TIENDA;
					}
					else
					{
						this._ID_TIENDA = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tienda");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Noticia_Noticia", Storage="_Tipo_Noticia", ThisKey="ID_TIPO_NOTICIA", OtherKey="ID_TIPO_NOTICIA", IsForeignKey=true)]
		public Tipo_Noticia Tipo_Noticia
		{
			get
			{
				return this._Tipo_Noticia.Entity;
			}
			set
			{
				Tipo_Noticia previousValue = this._Tipo_Noticia.Entity;
				if (((previousValue != value) 
							|| (this._Tipo_Noticia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo_Noticia.Entity = null;
						previousValue.Noticia.Remove(this);
					}
					this._Tipo_Noticia.Entity = value;
					if ((value != null))
					{
						value.Noticia.Add(this);
						this._ID_TIPO_NOTICIA = value.ID_TIPO_NOTICIA;
					}
					else
					{
						this._ID_TIPO_NOTICIA = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tipo_Noticia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Noticia_Tienda")]
	public partial class Noticia_Tienda
	{
		
		private System.Nullable<int> _id_noticia;
		
		private string _nombre;
		
		public Noticia_Tienda()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_noticia", DbType="Int")]
		public System.Nullable<int> id_noticia
		{
			get
			{
				return this._id_noticia;
			}
			set
			{
				if ((this._id_noticia != value))
				{
					this._id_noticia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NChar(10)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this._nombre = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pais")]
	public partial class Pais : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PAIS;
		
		private string _NOMBRE;
		
		private EntitySet<Region> _Region;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PAISChanging(int value);
    partial void OnID_PAISChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    #endregion
		
		public Pais()
		{
			this._Region = new EntitySet<Region>(new Action<Region>(this.attach_Region), new Action<Region>(this.detach_Region));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PAIS", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PAIS
		{
			get
			{
				return this._ID_PAIS;
			}
			set
			{
				if ((this._ID_PAIS != value))
				{
					this.OnID_PAISChanging(value);
					this.SendPropertyChanging();
					this._ID_PAIS = value;
					this.SendPropertyChanged("ID_PAIS");
					this.OnID_PAISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pais_Region", Storage="_Region", ThisKey="ID_PAIS", OtherKey="ID_PAIS")]
		public EntitySet<Region> Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				this._Region.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Region(Region entity)
		{
			this.SendPropertyChanging();
			entity.Pais = this;
		}
		
		private void detach_Region(Region entity)
		{
			this.SendPropertyChanging();
			entity.Pais = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producto")]
	public partial class Producto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PRODUCTO;
		
		private string _NOMBRE;
		
		private string _DESCRIPCION;
		
		private string _VALOR;
		
		private string _OCACION;
		
		private string _TALLA;
		
		private System.Nullable<int> _CANTIDAD_PRENDAS;
		
		private System.Nullable<int> _ID_TIENDA;
		
		private System.Nullable<int> _ID_ESTADO;
		
		private EntitySet<Imagen_Producto> _Imagen_Producto;
		
		private EntitySet<Producto_Tag> _Producto_Tag;
		
		private EntityRef<ESTADO_PRENDA> _ESTADO_PRENDA;
		
		private EntityRef<Tienda> _Tienda;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PRODUCTOChanging(int value);
    partial void OnID_PRODUCTOChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    partial void OnVALORChanging(string value);
    partial void OnVALORChanged();
    partial void OnOCACIONChanging(string value);
    partial void OnOCACIONChanged();
    partial void OnTALLAChanging(string value);
    partial void OnTALLAChanged();
    partial void OnCANTIDAD_PRENDASChanging(System.Nullable<int> value);
    partial void OnCANTIDAD_PRENDASChanged();
    partial void OnID_TIENDAChanging(System.Nullable<int> value);
    partial void OnID_TIENDAChanged();
    partial void OnID_ESTADOChanging(System.Nullable<int> value);
    partial void OnID_ESTADOChanged();
    #endregion
		
		public Producto()
		{
			this._Imagen_Producto = new EntitySet<Imagen_Producto>(new Action<Imagen_Producto>(this.attach_Imagen_Producto), new Action<Imagen_Producto>(this.detach_Imagen_Producto));
			this._Producto_Tag = new EntitySet<Producto_Tag>(new Action<Producto_Tag>(this.attach_Producto_Tag), new Action<Producto_Tag>(this.detach_Producto_Tag));
			this._ESTADO_PRENDA = default(EntityRef<ESTADO_PRENDA>);
			this._Tienda = default(EntityRef<Tienda>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PRODUCTO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PRODUCTO
		{
			get
			{
				return this._ID_PRODUCTO;
			}
			set
			{
				if ((this._ID_PRODUCTO != value))
				{
					this.OnID_PRODUCTOChanging(value);
					this.SendPropertyChanging();
					this._ID_PRODUCTO = value;
					this.SendPropertyChanged("ID_PRODUCTO");
					this.OnID_PRODUCTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(100)")]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALOR", DbType="VarChar(50)")]
		public string VALOR
		{
			get
			{
				return this._VALOR;
			}
			set
			{
				if ((this._VALOR != value))
				{
					this.OnVALORChanging(value);
					this.SendPropertyChanging();
					this._VALOR = value;
					this.SendPropertyChanged("VALOR");
					this.OnVALORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OCACION", DbType="VarChar(50)")]
		public string OCACION
		{
			get
			{
				return this._OCACION;
			}
			set
			{
				if ((this._OCACION != value))
				{
					this.OnOCACIONChanging(value);
					this.SendPropertyChanging();
					this._OCACION = value;
					this.SendPropertyChanged("OCACION");
					this.OnOCACIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TALLA", DbType="VarChar(50)")]
		public string TALLA
		{
			get
			{
				return this._TALLA;
			}
			set
			{
				if ((this._TALLA != value))
				{
					this.OnTALLAChanging(value);
					this.SendPropertyChanging();
					this._TALLA = value;
					this.SendPropertyChanged("TALLA");
					this.OnTALLAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CANTIDAD_PRENDAS", DbType="Int")]
		public System.Nullable<int> CANTIDAD_PRENDAS
		{
			get
			{
				return this._CANTIDAD_PRENDAS;
			}
			set
			{
				if ((this._CANTIDAD_PRENDAS != value))
				{
					this.OnCANTIDAD_PRENDASChanging(value);
					this.SendPropertyChanging();
					this._CANTIDAD_PRENDAS = value;
					this.SendPropertyChanged("CANTIDAD_PRENDAS");
					this.OnCANTIDAD_PRENDASChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIENDA", DbType="Int")]
		public System.Nullable<int> ID_TIENDA
		{
			get
			{
				return this._ID_TIENDA;
			}
			set
			{
				if ((this._ID_TIENDA != value))
				{
					if (this._Tienda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TIENDAChanging(value);
					this.SendPropertyChanging();
					this._ID_TIENDA = value;
					this.SendPropertyChanged("ID_TIENDA");
					this.OnID_TIENDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTADO", DbType="Int")]
		public System.Nullable<int> ID_ESTADO
		{
			get
			{
				return this._ID_ESTADO;
			}
			set
			{
				if ((this._ID_ESTADO != value))
				{
					if (this._ESTADO_PRENDA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ESTADOChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTADO = value;
					this.SendPropertyChanged("ID_ESTADO");
					this.OnID_ESTADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Imagen_Producto", Storage="_Imagen_Producto", ThisKey="ID_PRODUCTO", OtherKey="ID_PRODUCTO")]
		public EntitySet<Imagen_Producto> Imagen_Producto
		{
			get
			{
				return this._Imagen_Producto;
			}
			set
			{
				this._Imagen_Producto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Producto_Tag", Storage="_Producto_Tag", ThisKey="ID_PRODUCTO", OtherKey="id_producto")]
		public EntitySet<Producto_Tag> Producto_Tag
		{
			get
			{
				return this._Producto_Tag;
			}
			set
			{
				this._Producto_Tag.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTADO_PRENDA_Producto", Storage="_ESTADO_PRENDA", ThisKey="ID_ESTADO", OtherKey="ID_ESTADO_PRENDA", IsForeignKey=true)]
		public ESTADO_PRENDA ESTADO_PRENDA
		{
			get
			{
				return this._ESTADO_PRENDA.Entity;
			}
			set
			{
				ESTADO_PRENDA previousValue = this._ESTADO_PRENDA.Entity;
				if (((previousValue != value) 
							|| (this._ESTADO_PRENDA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESTADO_PRENDA.Entity = null;
						previousValue.Producto.Remove(this);
					}
					this._ESTADO_PRENDA.Entity = value;
					if ((value != null))
					{
						value.Producto.Add(this);
						this._ID_ESTADO = value.ID_ESTADO_PRENDA;
					}
					else
					{
						this._ID_ESTADO = default(Nullable<int>);
					}
					this.SendPropertyChanged("ESTADO_PRENDA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tienda_Producto", Storage="_Tienda", ThisKey="ID_TIENDA", OtherKey="ID_TIENDA", IsForeignKey=true)]
		public Tienda Tienda
		{
			get
			{
				return this._Tienda.Entity;
			}
			set
			{
				Tienda previousValue = this._Tienda.Entity;
				if (((previousValue != value) 
							|| (this._Tienda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tienda.Entity = null;
						previousValue.Producto.Remove(this);
					}
					this._Tienda.Entity = value;
					if ((value != null))
					{
						value.Producto.Add(this);
						this._ID_TIENDA = value.ID_TIENDA;
					}
					else
					{
						this._ID_TIENDA = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tienda");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Imagen_Producto(Imagen_Producto entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_Imagen_Producto(Imagen_Producto entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
		
		private void attach_Producto_Tag(Producto_Tag entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_Producto_Tag(Producto_Tag entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producto_Tag")]
	public partial class Producto_Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_producto_tag;
		
		private System.Nullable<int> _id_tag;
		
		private System.Nullable<int> _id_producto;
		
		private EntityRef<Producto> _Producto;
		
		private EntityRef<TAGS> _TAGS;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_producto_tagChanging(int value);
    partial void Onid_producto_tagChanged();
    partial void Onid_tagChanging(System.Nullable<int> value);
    partial void Onid_tagChanged();
    partial void Onid_productoChanging(System.Nullable<int> value);
    partial void Onid_productoChanged();
    #endregion
		
		public Producto_Tag()
		{
			this._Producto = default(EntityRef<Producto>);
			this._TAGS = default(EntityRef<TAGS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_producto_tag", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_producto_tag
		{
			get
			{
				return this._id_producto_tag;
			}
			set
			{
				if ((this._id_producto_tag != value))
				{
					this.Onid_producto_tagChanging(value);
					this.SendPropertyChanging();
					this._id_producto_tag = value;
					this.SendPropertyChanged("id_producto_tag");
					this.Onid_producto_tagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tag", DbType="Int")]
		public System.Nullable<int> id_tag
		{
			get
			{
				return this._id_tag;
			}
			set
			{
				if ((this._id_tag != value))
				{
					if (this._TAGS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_tagChanging(value);
					this.SendPropertyChanging();
					this._id_tag = value;
					this.SendPropertyChanged("id_tag");
					this.Onid_tagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_producto", DbType="Int")]
		public System.Nullable<int> id_producto
		{
			get
			{
				return this._id_producto;
			}
			set
			{
				if ((this._id_producto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_productoChanging(value);
					this.SendPropertyChanging();
					this._id_producto = value;
					this.SendPropertyChanged("id_producto");
					this.Onid_productoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Producto_Tag", Storage="_Producto", ThisKey="id_producto", OtherKey="ID_PRODUCTO", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.Producto_Tag.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.Producto_Tag.Add(this);
						this._id_producto = value.ID_PRODUCTO;
					}
					else
					{
						this._id_producto = default(Nullable<int>);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAGS_Producto_Tag", Storage="_TAGS", ThisKey="id_tag", OtherKey="ID_TAG", IsForeignKey=true)]
		public TAGS TAGS
		{
			get
			{
				return this._TAGS.Entity;
			}
			set
			{
				TAGS previousValue = this._TAGS.Entity;
				if (((previousValue != value) 
							|| (this._TAGS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAGS.Entity = null;
						previousValue.Producto_Tag.Remove(this);
					}
					this._TAGS.Entity = value;
					if ((value != null))
					{
						value.Producto_Tag.Add(this);
						this._id_tag = value.ID_TAG;
					}
					else
					{
						this._id_tag = default(Nullable<int>);
					}
					this.SendPropertyChanged("TAGS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Region")]
	public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_REGION;
		
		private string _NOMBRE;
		
		private System.Nullable<int> _ID_PAIS;
		
		private EntitySet<Comuna> _Comuna;
		
		private EntityRef<Pais> _Pais;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_REGIONChanging(int value);
    partial void OnID_REGIONChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnID_PAISChanging(System.Nullable<int> value);
    partial void OnID_PAISChanged();
    #endregion
		
		public Region()
		{
			this._Comuna = new EntitySet<Comuna>(new Action<Comuna>(this.attach_Comuna), new Action<Comuna>(this.detach_Comuna));
			this._Pais = default(EntityRef<Pais>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_REGION", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_REGION
		{
			get
			{
				return this._ID_REGION;
			}
			set
			{
				if ((this._ID_REGION != value))
				{
					this.OnID_REGIONChanging(value);
					this.SendPropertyChanging();
					this._ID_REGION = value;
					this.SendPropertyChanged("ID_REGION");
					this.OnID_REGIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PAIS", DbType="Int")]
		public System.Nullable<int> ID_PAIS
		{
			get
			{
				return this._ID_PAIS;
			}
			set
			{
				if ((this._ID_PAIS != value))
				{
					if (this._Pais.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PAISChanging(value);
					this.SendPropertyChanging();
					this._ID_PAIS = value;
					this.SendPropertyChanged("ID_PAIS");
					this.OnID_PAISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Comuna", Storage="_Comuna", ThisKey="ID_REGION", OtherKey="ID_REGION")]
		public EntitySet<Comuna> Comuna
		{
			get
			{
				return this._Comuna;
			}
			set
			{
				this._Comuna.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pais_Region", Storage="_Pais", ThisKey="ID_PAIS", OtherKey="ID_PAIS", IsForeignKey=true)]
		public Pais Pais
		{
			get
			{
				return this._Pais.Entity;
			}
			set
			{
				Pais previousValue = this._Pais.Entity;
				if (((previousValue != value) 
							|| (this._Pais.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pais.Entity = null;
						previousValue.Region.Remove(this);
					}
					this._Pais.Entity = value;
					if ((value != null))
					{
						value.Region.Add(this);
						this._ID_PAIS = value.ID_PAIS;
					}
					else
					{
						this._ID_PAIS = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pais");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comuna(Comuna entity)
		{
			this.SendPropertyChanging();
			entity.Region = this;
		}
		
		private void detach_Comuna(Comuna entity)
		{
			this.SendPropertyChanging();
			entity.Region = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAGS")]
	public partial class TAGS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TAG;
		
		private string _NOMBRE;
		
		private EntitySet<Producto_Tag> _Producto_Tag;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TAGChanging(int value);
    partial void OnID_TAGChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    #endregion
		
		public TAGS()
		{
			this._Producto_Tag = new EntitySet<Producto_Tag>(new Action<Producto_Tag>(this.attach_Producto_Tag), new Action<Producto_Tag>(this.detach_Producto_Tag));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TAG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TAG
		{
			get
			{
				return this._ID_TAG;
			}
			set
			{
				if ((this._ID_TAG != value))
				{
					this.OnID_TAGChanging(value);
					this.SendPropertyChanging();
					this._ID_TAG = value;
					this.SendPropertyChanged("ID_TAG");
					this.OnID_TAGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAGS_Producto_Tag", Storage="_Producto_Tag", ThisKey="ID_TAG", OtherKey="id_tag")]
		public EntitySet<Producto_Tag> Producto_Tag
		{
			get
			{
				return this._Producto_Tag;
			}
			set
			{
				this._Producto_Tag.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Producto_Tag(Producto_Tag entity)
		{
			this.SendPropertyChanging();
			entity.TAGS = this;
		}
		
		private void detach_Producto_Tag(Producto_Tag entity)
		{
			this.SendPropertyChanging();
			entity.TAGS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tienda")]
	public partial class Tienda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TIENDA;
		
		private string _NOMBRE;
		
		private string _RESENA;
		
		private System.Nullable<System.DateTime> _FECHA_CREACION;
		
		private System.Nullable<int> _ID_ESTADO;
		
		private EntitySet<Codigo> _Codigo;
		
		private EntitySet<Usuario> _Usuario;
		
		private EntitySet<Localidad> _Localidad;
		
		private EntitySet<Noticia> _Noticia;
		
		private EntitySet<Producto> _Producto;
		
		private EntityRef<Estado_Tienda> _Estado_Tienda;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TIENDAChanging(int value);
    partial void OnID_TIENDAChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnRESENAChanging(string value);
    partial void OnRESENAChanged();
    partial void OnFECHA_CREACIONChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHA_CREACIONChanged();
    partial void OnID_ESTADOChanging(System.Nullable<int> value);
    partial void OnID_ESTADOChanged();
    #endregion
		
		public Tienda()
		{
			this._Codigo = new EntitySet<Codigo>(new Action<Codigo>(this.attach_Codigo), new Action<Codigo>(this.detach_Codigo));
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			this._Localidad = new EntitySet<Localidad>(new Action<Localidad>(this.attach_Localidad), new Action<Localidad>(this.detach_Localidad));
			this._Noticia = new EntitySet<Noticia>(new Action<Noticia>(this.attach_Noticia), new Action<Noticia>(this.detach_Noticia));
			this._Producto = new EntitySet<Producto>(new Action<Producto>(this.attach_Producto), new Action<Producto>(this.detach_Producto));
			this._Estado_Tienda = default(EntityRef<Estado_Tienda>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIENDA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TIENDA
		{
			get
			{
				return this._ID_TIENDA;
			}
			set
			{
				if ((this._ID_TIENDA != value))
				{
					this.OnID_TIENDAChanging(value);
					this.SendPropertyChanging();
					this._ID_TIENDA = value;
					this.SendPropertyChanged("ID_TIENDA");
					this.OnID_TIENDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(100)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESENA", DbType="VarChar(MAX)")]
		public string RESENA
		{
			get
			{
				return this._RESENA;
			}
			set
			{
				if ((this._RESENA != value))
				{
					this.OnRESENAChanging(value);
					this.SendPropertyChanging();
					this._RESENA = value;
					this.SendPropertyChanged("RESENA");
					this.OnRESENAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA_CREACION", DbType="DateTime")]
		public System.Nullable<System.DateTime> FECHA_CREACION
		{
			get
			{
				return this._FECHA_CREACION;
			}
			set
			{
				if ((this._FECHA_CREACION != value))
				{
					this.OnFECHA_CREACIONChanging(value);
					this.SendPropertyChanging();
					this._FECHA_CREACION = value;
					this.SendPropertyChanged("FECHA_CREACION");
					this.OnFECHA_CREACIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTADO", DbType="Int")]
		public System.Nullable<int> ID_ESTADO
		{
			get
			{
				return this._ID_ESTADO;
			}
			set
			{
				if ((this._ID_ESTADO != value))
				{
					if (this._Estado_Tienda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ESTADOChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTADO = value;
					this.SendPropertyChanged("ID_ESTADO");
					this.OnID_ESTADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tienda_Codigo", Storage="_Codigo", ThisKey="ID_TIENDA", OtherKey="ID_TIENDA")]
		public EntitySet<Codigo> Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				this._Codigo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tienda_Usuario", Storage="_Usuario", ThisKey="ID_TIENDA", OtherKey="ID_TIENDA")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tienda_Localidad", Storage="_Localidad", ThisKey="ID_TIENDA", OtherKey="ID_TIENDA")]
		public EntitySet<Localidad> Localidad
		{
			get
			{
				return this._Localidad;
			}
			set
			{
				this._Localidad.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tienda_Noticia", Storage="_Noticia", ThisKey="ID_TIENDA", OtherKey="ID_TIENDA")]
		public EntitySet<Noticia> Noticia
		{
			get
			{
				return this._Noticia;
			}
			set
			{
				this._Noticia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tienda_Producto", Storage="_Producto", ThisKey="ID_TIENDA", OtherKey="ID_TIENDA")]
		public EntitySet<Producto> Producto
		{
			get
			{
				return this._Producto;
			}
			set
			{
				this._Producto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Tienda_Tienda", Storage="_Estado_Tienda", ThisKey="ID_ESTADO", OtherKey="ID_ESTADO_TIENDA", IsForeignKey=true)]
		public Estado_Tienda Estado_Tienda
		{
			get
			{
				return this._Estado_Tienda.Entity;
			}
			set
			{
				Estado_Tienda previousValue = this._Estado_Tienda.Entity;
				if (((previousValue != value) 
							|| (this._Estado_Tienda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado_Tienda.Entity = null;
						previousValue.Tienda.Remove(this);
					}
					this._Estado_Tienda.Entity = value;
					if ((value != null))
					{
						value.Tienda.Add(this);
						this._ID_ESTADO = value.ID_ESTADO_TIENDA;
					}
					else
					{
						this._ID_ESTADO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Estado_Tienda");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Codigo(Codigo entity)
		{
			this.SendPropertyChanging();
			entity.Tienda = this;
		}
		
		private void detach_Codigo(Codigo entity)
		{
			this.SendPropertyChanging();
			entity.Tienda = null;
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Tienda = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Tienda = null;
		}
		
		private void attach_Localidad(Localidad entity)
		{
			this.SendPropertyChanging();
			entity.Tienda = this;
		}
		
		private void detach_Localidad(Localidad entity)
		{
			this.SendPropertyChanging();
			entity.Tienda = null;
		}
		
		private void attach_Noticia(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Tienda = this;
		}
		
		private void detach_Noticia(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Tienda = null;
		}
		
		private void attach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Tienda = this;
		}
		
		private void detach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Tienda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipo_Dueno")]
	public partial class Tipo_Dueno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TIPO_DUENO;
		
		private string _NOMBRE;
		
		private EntitySet<Imagen> _Imagen;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TIPO_DUENOChanging(int value);
    partial void OnID_TIPO_DUENOChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    #endregion
		
		public Tipo_Dueno()
		{
			this._Imagen = new EntitySet<Imagen>(new Action<Imagen>(this.attach_Imagen), new Action<Imagen>(this.detach_Imagen));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIPO_DUENO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TIPO_DUENO
		{
			get
			{
				return this._ID_TIPO_DUENO;
			}
			set
			{
				if ((this._ID_TIPO_DUENO != value))
				{
					this.OnID_TIPO_DUENOChanging(value);
					this.SendPropertyChanging();
					this._ID_TIPO_DUENO = value;
					this.SendPropertyChanged("ID_TIPO_DUENO");
					this.OnID_TIPO_DUENOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Dueno_Imagen", Storage="_Imagen", ThisKey="ID_TIPO_DUENO", OtherKey="ID_TIPO_DUENO")]
		public EntitySet<Imagen> Imagen
		{
			get
			{
				return this._Imagen;
			}
			set
			{
				this._Imagen.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Imagen(Imagen entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Dueno = this;
		}
		
		private void detach_Imagen(Imagen entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Dueno = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipo_Imagen")]
	public partial class Tipo_Imagen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TIPO_IMAGEN;
		
		private string _DESCRIPCION;
		
		private System.Data.Linq.Binary _TIMESTAMP;
		
		private EntitySet<Imagen> _Imagen;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TIPO_IMAGENChanging(int value);
    partial void OnID_TIPO_IMAGENChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    partial void OnTIMESTAMPChanging(System.Data.Linq.Binary value);
    partial void OnTIMESTAMPChanged();
    #endregion
		
		public Tipo_Imagen()
		{
			this._Imagen = new EntitySet<Imagen>(new Action<Imagen>(this.attach_Imagen), new Action<Imagen>(this.detach_Imagen));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIPO_IMAGEN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID_TIPO_IMAGEN
		{
			get
			{
				return this._ID_TIPO_IMAGEN;
			}
			set
			{
				if ((this._ID_TIPO_IMAGEN != value))
				{
					this.OnID_TIPO_IMAGENChanging(value);
					this.SendPropertyChanging();
					this._ID_TIPO_IMAGEN = value;
					this.SendPropertyChanged("ID_TIPO_IMAGEN");
					this.OnID_TIPO_IMAGENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIMESTAMP", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TIMESTAMP
		{
			get
			{
				return this._TIMESTAMP;
			}
			set
			{
				if ((this._TIMESTAMP != value))
				{
					this.OnTIMESTAMPChanging(value);
					this.SendPropertyChanging();
					this._TIMESTAMP = value;
					this.SendPropertyChanged("TIMESTAMP");
					this.OnTIMESTAMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Imagen_Imagen", Storage="_Imagen", ThisKey="ID_TIPO_IMAGEN", OtherKey="ID_TIPO_IMAGEN")]
		public EntitySet<Imagen> Imagen
		{
			get
			{
				return this._Imagen;
			}
			set
			{
				this._Imagen.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Imagen(Imagen entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Imagen = this;
		}
		
		private void detach_Imagen(Imagen entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Imagen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipo_Noticia")]
	public partial class Tipo_Noticia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TIPO_NOTICIA;
		
		private string _NOMBRE;
		
		private EntitySet<Noticia> _Noticia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TIPO_NOTICIAChanging(int value);
    partial void OnID_TIPO_NOTICIAChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    #endregion
		
		public Tipo_Noticia()
		{
			this._Noticia = new EntitySet<Noticia>(new Action<Noticia>(this.attach_Noticia), new Action<Noticia>(this.detach_Noticia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIPO_NOTICIA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TIPO_NOTICIA
		{
			get
			{
				return this._ID_TIPO_NOTICIA;
			}
			set
			{
				if ((this._ID_TIPO_NOTICIA != value))
				{
					this.OnID_TIPO_NOTICIAChanging(value);
					this.SendPropertyChanging();
					this._ID_TIPO_NOTICIA = value;
					this.SendPropertyChanged("ID_TIPO_NOTICIA");
					this.OnID_TIPO_NOTICIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Noticia_Noticia", Storage="_Noticia", ThisKey="ID_TIPO_NOTICIA", OtherKey="ID_TIPO_NOTICIA")]
		public EntitySet<Noticia> Noticia
		{
			get
			{
				return this._Noticia;
			}
			set
			{
				this._Noticia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Noticia(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Noticia = this;
		}
		
		private void detach_Noticia(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Noticia = null;
		}
	}
}
#pragma warning restore 1591
